{"ast":null,"code":"import React, { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions';\nimport Total from './Total'; // class Statistics extends Component {\n//     state = {\n//         good: 0,\n//         neutral: 0,\n//         bad: 0,\n//         total: 0,\n//         persentage: 0\n//     }\n//     heandleGoodFeedback = () => {\n//         this.setState(prevState => ({\n//             good: prevState.good + 1,\n//         }))\n//         this.countTotalFeedback()\n//         this.countPositiveFeedbackPercentage()\n//     }\n//     heandleNeutralFeedback = () => {\n//         this.setState(prevState => ({\n//             neutral: prevState.neutral + 1,\n//         }))\n//         this.countTotalFeedback()\n//         this.countPositiveFeedbackPercentage()\n//     }\n//     heandleBadFeedback = () => {\n//         this.setState(prevState => ({\n//             bad: prevState.bad + 1,\n//         }))\n//         this.countTotalFeedback()\n//         this.countPositiveFeedbackPercentage()\n//     }\n//     countTotalFeedback = () => {\n//         this.setState(prevState => ({\n//             total: prevState.total + 1\n//         }))\n//     }\n//     countPositiveFeedbackPercentage = () => {\n//         this.setState((state) => {\n//             return { persentage: state.good * 100 / state.total }\n//         })\n//     }\n//     // render() {\n//     //     const { good, neutral, bad, total, persentage } = this.state;\n//     //     const persentageOfFeedback = Math.round(persentage);\n//     //     return (\n//     //         <>\n//     //             <FeedbackOptions\n//     //                 heandleGoodFeedback={() => this.heandleGoodFeedback(good)}\n//     //                 heandleBadFeedback={this.heandleBadFeedback}\n//     //                 heandleNeutralFeedback={this.heandleNeutralFeedback}\n//     //             />\n//     //             <Total good={good} neutral={neutral} bad={bad} total={total} positiveFeedback={persentageOfFeedback} />\n//     //         </>\n//     //     )\n//     // }\n// }\n\nexport default Statistics;","map":{"version":3,"sources":["/home/helen/Documents/Projects/React/2hw/src/components/Statistics/Statistics.jsx"],"names":["React","Component","FeedbackOptions","Total","Statistics"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport FeedbackOptions from './FeedbackOptions'\nimport Total from './Total'\n\n// class Statistics extends Component {\n\n//     state = {\n//         good: 0,\n//         neutral: 0,\n//         bad: 0,\n//         total: 0,\n//         persentage: 0\n//     }\n\n//     heandleGoodFeedback = () => {\n//         this.setState(prevState => ({\n//             good: prevState.good + 1,\n//         }))\n//         this.countTotalFeedback()\n//         this.countPositiveFeedbackPercentage()\n//     }\n\n//     heandleNeutralFeedback = () => {\n//         this.setState(prevState => ({\n//             neutral: prevState.neutral + 1,\n//         }))\n//         this.countTotalFeedback()\n//         this.countPositiveFeedbackPercentage()\n\n//     }\n//     heandleBadFeedback = () => {\n//         this.setState(prevState => ({\n//             bad: prevState.bad + 1,\n//         }))\n//         this.countTotalFeedback()\n//         this.countPositiveFeedbackPercentage()\n\n//     }\n\n//     countTotalFeedback = () => {\n//         this.setState(prevState => ({\n//             total: prevState.total + 1\n//         }))\n//     }\n\n//     countPositiveFeedbackPercentage = () => {\n//         this.setState((state) => {\n//             return { persentage: state.good * 100 / state.total }\n//         })\n//     }\n\n//     // render() {\n//     //     const { good, neutral, bad, total, persentage } = this.state;\n//     //     const persentageOfFeedback = Math.round(persentage);\n\n//     //     return (\n//     //         <>\n//     //             <FeedbackOptions\n//     //                 heandleGoodFeedback={() => this.heandleGoodFeedback(good)}\n//     //                 heandleBadFeedback={this.heandleBadFeedback}\n//     //                 heandleNeutralFeedback={this.heandleNeutralFeedback}\n//     //             />\n//     //             <Total good={good} neutral={neutral} bad={bad} total={total} positiveFeedback={persentageOfFeedback} />\n//     //         </>\n//     //     )\n//     // }\n// }\n\nexport default Statistics;"]},"metadata":{},"sourceType":"module"}