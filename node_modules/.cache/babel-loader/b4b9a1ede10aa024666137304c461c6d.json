{"ast":null,"code":"var _jsxFileName = \"/home/helen/Documents/Projects/React/1components/src/components/statistics/Statistics.jsx\";\nimport styles from './Statistic.module.css';\nimport PropTypes from 'prop-types';\nimport Items from './Items';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = ({\n  statistics,\n  title\n}) => {\n  let backgroundColor = () => `rgb(${Math.random() * 255},${Math.random() * 255}, ${Math.random() * 255})`;\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.statistics,\n    children: [!!title && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.stat_list,\n      children: statistics.map(({\n        id,\n        label,\n        percentage\n      }) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.item,\n        style: {\n          backgroundColor: backgroundColor()\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.label,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.percentage,\n          children: [percentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Statistics;\nStatistics.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  avatar: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired\n};\nexport default Statistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/home/helen/Documents/Projects/React/1components/src/components/statistics/Statistics.jsx"],"names":["styles","PropTypes","Items","Statistics","statistics","title","backgroundColor","Math","random","stat_list","map","id","label","percentage","item","propTypes","string","isRequired","avatar","number"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA2B;AAE1C,MAAIC,eAAe,GAAG,MACjB,OAAMC,IAAI,CAACC,MAAL,KAAgB,GAAI,IAAGD,IAAI,CAACC,MAAL,KAAgB,GAAI,KAAID,IAAI,CAACC,MAAL,KAAgB,GAAI,GAD9E;;AAGA,sBACI;AAAS,IAAA,SAAS,EAAER,MAAM,CAACI,UAA3B;AAAA,eACM,CAAC,CAACC,KAAF,iBAAW;AAAI,MAAA,SAAS,EAAEL,MAAM,CAACK,KAAtB;AAAA,gBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,YADjB,eAEI;AAAI,MAAA,SAAS,EAAEL,MAAM,CAACS,SAAtB;AAAA,gBACKL,UAAU,CAACM,GAAX,CAAe,CAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,KAAN;AAAaC,QAAAA;AAAb,OAAD,kBACZ;AAAI,QAAA,SAAS,EAAEb,MAAM,CAACc,IAAtB;AAAqC,QAAA,KAAK,EAAE;AAAER,UAAAA,eAAe,EAAEA,eAAe;AAAlC,SAA5C;AAAA,gCACI;AAAM,UAAA,SAAS,EAAEN,MAAM,CAACY,KAAxB;AAAA,oBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAEZ,MAAM,CAACa,UAAxB;AAAA,qBAAqCA,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAiCF,EAAjC;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAlBD;;KAAMR,U;AAoBNA,UAAU,CAACY,SAAX,GAAuB;AACnBJ,EAAAA,EAAE,EAAEV,SAAS,CAACe,MAAV,CAAiBC,UADF;AAEnBZ,EAAAA,KAAK,EAAEJ,SAAS,CAACe,MAFE;AAGnBE,EAAAA,MAAM,EAAEjB,SAAS,CAACe,MAHC;AAInBJ,EAAAA,KAAK,EAAEX,SAAS,CAACe,MAAV,CAAiBC,UAJL;AAKnBJ,EAAAA,UAAU,EAAEZ,SAAS,CAACkB,MAAV,CAAiBF;AALV,CAAvB;AASA,eAAed,UAAf","sourcesContent":["import styles from './Statistic.module.css';\nimport PropTypes from 'prop-types';\nimport Items from './Items'\n\nconst Statistics = ({ statistics, title }) => {\n\n    let backgroundColor = () =>\n        `rgb(${Math.random() * 255},${Math.random() * 255}, ${Math.random() * 255})`;\n\n    return (\n        <section className={styles.statistics}>\n            { !!title && <h2 className={styles.title}>{title}</h2>}\n            <ul className={styles.stat_list}>\n                {statistics.map(({ id, label, percentage }) => (\n                    <li className={styles.item} key={id} style={{ backgroundColor: backgroundColor() }}>\n                        <span className={styles.label}>{label}</span>\n                        <span className={styles.percentage}>{percentage}%</span>\n                    </li>\n                ))}\n            </ul>\n        </section >\n    )\n}\n\nStatistics.propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    avatar: PropTypes.string,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired,\n\n};\n\nexport default Statistics;"]},"metadata":{},"sourceType":"module"}