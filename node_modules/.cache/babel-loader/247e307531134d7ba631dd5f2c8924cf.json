{"ast":null,"code":"var _jsxFileName = \"/home/helen/Documents/Projects/React/goit-react-hw-02-phonebook/src/components/ContactForm.jsx\";\nimport React, { Component } from 'react';\nimport generateUniqueId from 'generate-unique-id';\nimport styles from './styles/PhoneBook.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      number: ''\n    };\n\n    this.handleNewValue = ev => {\n      const {\n        value,\n        name\n      } = ev.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleData = () => {\n      const newContactDate = this.state;\n      const contacts = this.props.contacts;\n      const checkedName = contacts.find(el => el.name.toLowerCase() === newContactDate.name.toLowerCase());\n      let newContact;\n\n      const createNewContact = () => {\n        newContact = {\n          id: generateUniqueId(),\n          ...newContactDate\n        };\n      };\n\n      if (!checkedName) {\n        createNewContact();\n        this.props.handleSubmit(newContact);\n      } else {\n        alert(`${newContactDate.name} already in contacts`);\n      }\n\n      this.setState({\n        name: '',\n        number: ''\n      }); // !checkedName\n      //     ?\n      //     this.props.handleSubmit(this.state)\n      //     : alert(`${newContact.name} already in contacts`)\n      // this.props.handleSubmit(this.state);\n      // this.setState({\n      //     name: '',\n      //     number: '',\n      //     id: '',\n      // })\n    };\n  }\n\n  render() {\n    const inputNames = this.props.options;\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      children: [inputNames.map(inputName => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: styles.label,\n        children: [inputName, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: inputName,\n          value: this.state[inputName],\n          onChange: this.handleNewValue,\n          className: styles.input\n        }, inputName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, inputName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleData,\n        disabled: !this.state.name || !this.state.number,\n        className: styles.btn,\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/home/helen/Documents/Projects/React/goit-react-hw-02-phonebook/src/components/ContactForm.jsx"],"names":["React","Component","generateUniqueId","styles","ContactForm","state","name","number","handleNewValue","ev","value","target","setState","handleData","newContactDate","contacts","props","checkedName","find","el","toLowerCase","newContact","createNewContact","id","handleSubmit","alert","render","inputNames","options","console","log","form","map","inputName","label","input","btn"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAGA,OAAOC,MAAP,MAAmB,+BAAnB;;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCI,KAFgC,GAExB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAFwB;;AAAA,SAOhCC,cAPgC,GAOfC,EAAE,IAAI;AACnB,YAAM;AAAEC,QAAAA,KAAF;AAASJ,QAAAA;AAAT,UAAkBG,EAAE,CAACE,MAA3B;AAEA,WAAKC,QAAL,CAAc;AACV,SAACN,IAAD,GAAQI;AADE,OAAd;AAGH,KAb+B;;AAAA,SAehCG,UAfgC,GAenB,MAAM;AACf,YAAMC,cAAc,GAAG,KAAKT,KAA5B;AACA,YAAMU,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAA5B;AACA,YAAME,WAAW,GAAGF,QAAQ,CAACG,IAAT,CAAcC,EAAE,IAAIA,EAAE,CAACb,IAAH,CAAQc,WAAR,OAA0BN,cAAc,CAACR,IAAf,CAAoBc,WAApB,EAA9C,CAApB;AACA,UAAIC,UAAJ;;AAEA,YAAMC,gBAAgB,GAAG,MAAM;AAC3BD,QAAAA,UAAU,GAAG;AACTE,UAAAA,EAAE,EAAErB,gBAAgB,EADX;AAET,aAAGY;AAFM,SAAb;AAIH,OALD;;AAQA,UAAI,CAACG,WAAL,EAAkB;AACdK,QAAAA,gBAAgB;AAChB,aAAKN,KAAL,CAAWQ,YAAX,CAAwBH,UAAxB;AACH,OAHD,MAGO;AACHI,QAAAA,KAAK,CAAE,GAAEX,cAAc,CAACR,IAAK,sBAAxB,CAAL;AACH;;AACD,WAAKM,QAAL,CAAc;AACVN,QAAAA,IAAI,EAAE,EADI;AAEVC,QAAAA,MAAM,EAAE;AAFE,OAAd,EApBe,CAyBf;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAIH,KAzD+B;AAAA;;AA2DhCmB,EAAAA,MAAM,GAAG;AACL,UAAMC,UAAU,GAAG,KAAKX,KAAL,CAAWY,OAA9B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzB,KAAjB;AAEA,wBACI;AAAM,MAAA,SAAS,EAAEF,MAAM,CAAC4B,IAAxB;AAAA,iBACKJ,UAAU,CAACK,GAAX,CAAeC,SAAS,iBACrB;AAAuB,QAAA,SAAS,EAAE9B,MAAM,CAAC+B,KAAzC;AAAA,mBACKD,SADL,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmC,UAAA,IAAI,EAAEA,SAAzC;AAAoD,UAAA,KAAK,EAAE,KAAK5B,KAAL,CAAW4B,SAAX,CAA3D;AAAkF,UAAA,QAAQ,EAAE,KAAKzB,cAAjG;AAAiH,UAAA,SAAS,EAAEL,MAAM,CAACgC;AAAnI,WAAwBF,SAAxB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAYA,SAAZ;AAAA;AAAA;AAAA;AAAA,cADH,CADL,eAOI;AAAQ,QAAA,OAAO,EAAE,KAAKpB,UAAtB;AAAkC,QAAA,QAAQ,EAAE,CAAC,KAAKR,KAAL,CAAWC,IAAZ,IAAoB,CAAC,KAAKD,KAAL,CAAWE,MAA5E;AAAoF,QAAA,SAAS,EAAEJ,MAAM,CAACiC,GAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA1E+B;;AA8EpC,eAAehC,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport generateUniqueId from 'generate-unique-id'\n\n\nimport styles from './styles/PhoneBook.module.css'\n\nclass ContactForm extends Component {\n\n    state = {\n        name: '',\n        number: '',\n    }\n\n    handleNewValue = ev => {\n        const { value, name } = ev.target;\n\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    handleData = () => {\n        const newContactDate = this.state;\n        const contacts = this.props.contacts;\n        const checkedName = contacts.find(el => el.name.toLowerCase() === newContactDate.name.toLowerCase())\n        let newContact;\n\n        const createNewContact = () => {\n            newContact = {\n                id: generateUniqueId(),\n                ...newContactDate\n            }\n        }\n\n\n        if (!checkedName) {\n            createNewContact();\n            this.props.handleSubmit(newContact)\n        } else {\n            alert(`${newContactDate.name} already in contacts`)\n        }\n        this.setState({\n            name: '',\n            number: '',\n\n        })\n        // !checkedName\n        //     ?\n        //     this.props.handleSubmit(this.state)\n\n        //     : alert(`${newContact.name} already in contacts`)\n\n\n        // this.props.handleSubmit(this.state);\n\n        // this.setState({\n        //     name: '',\n        //     number: '',\n        //     id: '',\n        // })\n\n\n\n    }\n\n    render() {\n        const inputNames = this.props.options;\n        console.log(this.state)\n\n        return (\n            <form className={styles.form}>\n                {inputNames.map(inputName => (\n                    <label key={inputName} className={styles.label}>\n                        {inputName}\n                        <input type='text' key={inputName} name={inputName} value={this.state[inputName]} onChange={this.handleNewValue} className={styles.input} />\n                    </label>\n                ))}\n                <button onClick={this.handleData} disabled={!this.state.name || !this.state.number} className={styles.btn}>Add contact</button>\n            </form >\n        )\n    }\n\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}