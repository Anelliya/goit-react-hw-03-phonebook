{"ast":null,"code":"var _jsxFileName = \"/home/helen/Documents/Projects/React/2hw/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport Section from \"./components/Statistics/Section \";\nimport FeedbackOptions from \"./components/Statistics/FeedbackOptions\";\nimport Total from './components/Statistics/Total';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Statistics extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0,\n      total: 0,\n      persentage: 0\n    };\n\n    this.heandleGoodFeedback = () => {\n      this.setState(prevState => ({\n        good: prevState.good + 1\n      }));\n      this.countTotalFeedback();\n      this.countPositiveFeedbackPercentage();\n    };\n\n    this.heandleNeutralFeedback = () => {\n      this.setState(prevState => ({\n        neutral: prevState.neutral + 1\n      }));\n      this.countTotalFeedback();\n      this.countPositiveFeedbackPercentage();\n    };\n\n    this.heandleBadFeedback = () => {\n      this.setState(prevState => ({\n        bad: prevState.bad + 1\n      }));\n      this.countTotalFeedback();\n      this.countPositiveFeedbackPercentage();\n    };\n\n    this.countTotalFeedback = () => {\n      this.setState(prevState => ({\n        total: prevState.total + 1\n      }));\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      this.setState(state => {\n        return {\n          persentage: state.good * 100 / state.total\n        };\n      });\n    };\n  } // render() {\n  //     const { good, neutral, bad, total, persentage } = this.state;\n  //     const persentageOfFeedback = Math.round(persentage);\n  //     return (\n  //         <>\n  //             <FeedbackOptions\n  //                 heandleGoodFeedback={() => this.heandleGoodFeedback(good)}\n  //                 heandleBadFeedback={this.heandleBadFeedback}\n  //                 heandleNeutralFeedback={this.heandleNeutralFeedback}\n  //             />\n  //             <Total good={good} neutral={neutral} bad={bad} total={total} positiveFeedback={persentageOfFeedback} />\n  //         </>\n  //     )\n  // }\n\n\n}\n\nfunction App() {\n  const {\n    good,\n    neutral,\n    bad,\n    total,\n    persentage\n  } = Statistics.state; // const persentageOfFeedback = Math.round(persentage);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      title: \"Please leave feedback\",\n      children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n        heandleGoodFeedback: () => Statistics.heandleGoodFeedback(),\n        heandleBadFeedback: Statistics.heandleBadFeedback,\n        heandleNeutralFeedback: Statistics.heandleNeutralFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Statistics\",\n      children: /*#__PURE__*/_jsxDEV(Total, {\n        good: good,\n        neutral: neutral,\n        bad: bad,\n        total: total,\n        positiveFeedback: persentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/helen/Documents/Projects/React/2hw/src/App.js"],"names":["React","Component","Section","FeedbackOptions","Total","Statistics","state","good","neutral","bad","total","persentage","heandleGoodFeedback","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","heandleNeutralFeedback","heandleBadFeedback","App"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component } from 'react'\n\nimport Section from \"./components/Statistics/Section \";\nimport FeedbackOptions from \"./components/Statistics/FeedbackOptions\";\nimport Total from './components/Statistics/Total'\n\n\nclass Statistics extends Component {\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n    persentage: 0\n  }\n\n  heandleGoodFeedback = () => {\n    this.setState(prevState => ({\n      good: prevState.good + 1,\n    }))\n    this.countTotalFeedback()\n    this.countPositiveFeedbackPercentage()\n  }\n\n  heandleNeutralFeedback = () => {\n    this.setState(prevState => ({\n      neutral: prevState.neutral + 1,\n    }))\n    this.countTotalFeedback()\n    this.countPositiveFeedbackPercentage()\n\n  }\n  heandleBadFeedback = () => {\n    this.setState(prevState => ({\n      bad: prevState.bad + 1,\n    }))\n    this.countTotalFeedback()\n    this.countPositiveFeedbackPercentage()\n\n  }\n\n  countTotalFeedback = () => {\n    this.setState(prevState => ({\n      total: prevState.total + 1\n    }))\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    this.setState((state) => {\n      return { persentage: state.good * 100 / state.total }\n    })\n  }\n\n  // render() {\n  //     const { good, neutral, bad, total, persentage } = this.state;\n  //     const persentageOfFeedback = Math.round(persentage);\n\n  //     return (\n  //         <>\n  //             <FeedbackOptions\n  //                 heandleGoodFeedback={() => this.heandleGoodFeedback(good)}\n  //                 heandleBadFeedback={this.heandleBadFeedback}\n  //                 heandleNeutralFeedback={this.heandleNeutralFeedback}\n  //             />\n  //             <Total good={good} neutral={neutral} bad={bad} total={total} positiveFeedback={persentageOfFeedback} />\n  //         </>\n  //     )\n  // }\n}\n\nfunction App() {\n  const { good, neutral, bad, total, persentage } = Statistics.state;\n  // const persentageOfFeedback = Math.round(persentage);\n  return (\n    <div className=\"App\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions heandleGoodFeedback={() => Statistics.heandleGoodFeedback()}\n          heandleBadFeedback={Statistics.heandleBadFeedback}\n          heandleNeutralFeedback={Statistics.heandleNeutralFeedback} />\n      </Section>\n      <Section title=\"Statistics\">\n        <Total good={good} neutral={neutral} bad={bad} total={total} positiveFeedback={persentage} />\n      </Section>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}