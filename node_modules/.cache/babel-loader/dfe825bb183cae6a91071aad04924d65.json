{"ast":null,"code":"var _jsxFileName = \"/home/helen/Documents/Projects/React/goit-react-hw-02-phonebook/src/components/ContactForm.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst generateUniqueId = require('generate-unique-id');\n\nclass ContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      number: '',\n      id: ''\n    };\n\n    this.heandleNewValue = ev => {\n      const newValue = ev.currentTarget.value;\n      const turget = ev.currentTarget.name;\n      this.setState({\n        [turget]: newValue\n      });\n      console.log('key', ev.currentTarget.key);\n      this.setState({\n        id: ev.currentTarget.key\n      });\n    };\n\n    this.heandelData = ev => {\n      this.props.onSubmit(this.state);\n    };\n  }\n\n  render() {\n    const inputNames = this.props.options;\n    const id = generateUniqueId();\n    console.log(inputNames);\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"form\",\n      type: \"submit\",\n      onClick: this.heandelData,\n      children: [inputNames.map(inputName => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [inputName, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: inputName === 'Name' ? 'text' : 'phone',\n          name: inputName,\n          onChange: this.heandleNewValue\n        }, generateUniqueId(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/home/helen/Documents/Projects/React/goit-react-hw-02-phonebook/src/components/ContactForm.jsx"],"names":["React","Component","generateUniqueId","require","ContactForm","state","name","number","id","heandleNewValue","ev","newValue","currentTarget","value","turget","setState","console","log","key","heandelData","props","onSubmit","render","inputNames","options","map","inputName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAAhC;;AAIA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCI,KAFgC,GAExB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,EAAE,EAAE;AAHA,KAFwB;;AAAA,SAShCC,eATgC,GASdC,EAAE,IAAI;AACpB,YAAMC,QAAQ,GAAGD,EAAE,CAACE,aAAH,CAAiBC,KAAlC;AACA,YAAMC,MAAM,GAAGJ,EAAE,CAACE,aAAH,CAAiBN,IAAhC;AACA,WAAKS,QAAL,CAAc;AACV,SAACD,MAAD,GAAUH;AADA,OAAd;AAGAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBP,EAAE,CAACE,aAAH,CAAiBM,GAApC;AACA,WAAKH,QAAL,CAAc;AAAEP,QAAAA,EAAE,EAAEE,EAAE,CAACE,aAAH,CAAiBM;AAAvB,OAAd;AAEH,KAlB+B;;AAAA,SAoBhCC,WApBgC,GAoBlBT,EAAE,IAAI;AAChB,WAAKU,KAAL,CAAWC,QAAX,CAAoB,KAAKhB,KAAzB;AACH,KAtB+B;AAAA;;AAwBhCiB,EAAAA,MAAM,GAAG;AACL,UAAMC,UAAU,GAAG,KAAKH,KAAL,CAAWI,OAA9B;AACA,UAAMhB,EAAE,GAAGN,gBAAgB,EAA3B;AAEAc,IAAAA,OAAO,CAACC,GAAR,CAAYM,UAAZ;AAEA,wBACI;AAAM,MAAA,MAAM,EAAC,MAAb;AAAoB,MAAA,IAAI,EAAC,QAAzB;AAAkC,MAAA,OAAO,EAAE,KAAKJ,WAAhD;AAAA,iBACKI,UAAU,CAACE,GAAX,CAAeC,SAAS,iBACrB;AAAA,mBAAQA,SAAR,eACI;AAAO,UAAA,IAAI,EAAEA,SAAS,KAAK,MAAd,GAAuB,MAAvB,GAAgC,OAA7C;AAA+E,UAAA,IAAI,EAAEA,SAArF;AAAgG,UAAA,QAAQ,EAAE,KAAKjB;AAA/G,WAA2DP,gBAAgB,EAA3E;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,CADL,eAMI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAxC+B;;AA4CpC,eAAeE,WAAf","sourcesContent":["import React, { Component } from 'react'\n\nconst generateUniqueId = require('generate-unique-id');\n\n\n\nclass ContactForm extends Component {\n\n    state = {\n        name: '',\n        number: '',\n        id: ''\n    }\n\n\n    heandleNewValue = ev => {\n        const newValue = ev.currentTarget.value;\n        const turget = ev.currentTarget.name;\n        this.setState({\n            [turget]: newValue,\n        })\n        console.log('key', ev.currentTarget.key)\n        this.setState({ id: ev.currentTarget.key })\n\n    }\n\n    heandelData = ev => {\n        this.props.onSubmit(this.state);\n    }\n\n    render() {\n        const inputNames = this.props.options;\n        const id = generateUniqueId();\n\n        console.log(inputNames)\n\n        return (\n            <form action=\"form\" type=\"submit\" onClick={this.heandelData}>\n                {inputNames.map(inputName => (\n                    <label>{inputName}\n                        <input type={inputName === 'Name' ? 'text' : 'phone'} key={generateUniqueId()} name={inputName} onChange={this.heandleNewValue} />\n                    </label>\n                ))}\n                <button type=\"button\">Add contact</button>\n            </form>\n        )\n    }\n\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}