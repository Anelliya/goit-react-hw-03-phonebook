{"ast":null,"code":"var _jsxFileName = \"/home/helen/Documents/Projects/React/goit-react-hw-02-phonebook/src/components/ContactForm.jsx\";\nimport React, { Component } from 'react';\nimport generateUniqueId from 'generate-unique-id';\nimport styles from './styles/PhoneBook.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      number: '',\n      id: ''\n    };\n\n    this.handleNewValue = ev => {\n      const {\n        value,\n        name\n      } = ev.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleNewContact = () => {\n      const newContact = this.state;\n      const contacts = this.props.contacts;\n      const checkedName = contacts.find(el => el.name.toLowerCase() === newContact.name.toLowerCase());\n\n      const addId = () => this.setState({\n        id: generateUniqueId()\n      });\n\n      const sendContactToServer = () => this.props.handleSubmit(newContact);\n\n      const resetState = () => this.setState({\n        name: '',\n        number: '',\n        id: ''\n      });\n\n      const showNotification = () => alert(`${newContact.name} already in contacts`);\n\n      if (!checkedName) {\n        addId();\n        console.log(this.state);\n        sendContactToServer();\n      } else {\n        showNotification();\n      }\n\n      ;\n      resetState();\n    };\n  }\n\n  render() {\n    const inputNames = this.props.options;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      children: [inputNames.map(inputName => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: styles.label,\n        children: [inputName, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: inputName,\n          value: this.state[inputName],\n          onChange: this.handleNewValue,\n          className: styles.input\n        }, inputName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, inputName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleNewContact,\n        disabled: !this.state.name || !this.state.number,\n        className: styles.btn,\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/home/helen/Documents/Projects/React/goit-react-hw-02-phonebook/src/components/ContactForm.jsx"],"names":["React","Component","generateUniqueId","styles","ContactForm","state","name","number","id","handleNewValue","ev","value","target","setState","handleNewContact","newContact","contacts","props","checkedName","find","el","toLowerCase","addId","sendContactToServer","handleSubmit","resetState","showNotification","alert","console","log","render","inputNames","options","form","map","inputName","label","input","btn"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAGA,OAAOC,MAAP,MAAmB,+BAAnB;;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCI,KAFgC,GAExB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,EAAE,EAAE;AAHA,KAFwB;;AAAA,SAQhCC,cARgC,GAQfC,EAAE,IAAI;AACnB,YAAM;AAAEC,QAAAA,KAAF;AAASL,QAAAA;AAAT,UAAkBI,EAAE,CAACE,MAA3B;AAEA,WAAKC,QAAL,CAAc;AACV,SAACP,IAAD,GAAQK;AADE,OAAd;AAGH,KAd+B;;AAAA,SAgBhCG,gBAhBgC,GAgBb,MAAM;AACrB,YAAMC,UAAU,GAAG,KAAKV,KAAxB;AACA,YAAMW,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAA5B;AACA,YAAME,WAAW,GAAGF,QAAQ,CAACG,IAAT,CAAcC,EAAE,IAAIA,EAAE,CAACd,IAAH,CAAQe,WAAR,OAA0BN,UAAU,CAACT,IAAX,CAAgBe,WAAhB,EAA9C,CAApB;;AAEA,YAAMC,KAAK,GAAG,MAAM,KAAKT,QAAL,CAAc;AAAEL,QAAAA,EAAE,EAAEN,gBAAgB;AAAtB,OAAd,CAApB;;AACA,YAAMqB,mBAAmB,GAAG,MAAM,KAAKN,KAAL,CAAWO,YAAX,CAAwBT,UAAxB,CAAlC;;AACA,YAAMU,UAAU,GAAG,MAAM,KAAKZ,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,EAAE,EAAE;AAA5B,OAAd,CAAzB;;AACA,YAAMkB,gBAAgB,GAAG,MAAMC,KAAK,CAAE,GAAEZ,UAAU,CAACT,IAAK,sBAApB,CAApC;;AAEA,UAAI,CAACY,WAAL,EAAkB;AACdI,QAAAA,KAAK;AACLM,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxB,KAAjB;AACAkB,QAAAA,mBAAmB;AACtB,OAJD,MAIO;AAAEG,QAAAA,gBAAgB;AAAI;;AAAA;AAE7BD,MAAAA,UAAU;AACb,KAjC+B;AAAA;;AAmChCK,EAAAA,MAAM,GAAG;AACL,UAAMC,UAAU,GAAG,KAAKd,KAAL,CAAWe,OAA9B;AAEA,wBACI;AAAM,MAAA,SAAS,EAAE7B,MAAM,CAAC8B,IAAxB;AAAA,iBACKF,UAAU,CAACG,GAAX,CAAeC,SAAS,iBACrB;AAAuB,QAAA,SAAS,EAAEhC,MAAM,CAACiC,KAAzC;AAAA,mBACKD,SADL,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmC,UAAA,IAAI,EAAEA,SAAzC;AAAoD,UAAA,KAAK,EAAE,KAAK9B,KAAL,CAAW8B,SAAX,CAA3D;AAAkF,UAAA,QAAQ,EAAE,KAAK1B,cAAjG;AAAiH,UAAA,SAAS,EAAEN,MAAM,CAACkC;AAAnI,WAAwBF,SAAxB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAYA,SAAZ;AAAA;AAAA;AAAA;AAAA,cADH,CADL,eAOI;AAAQ,QAAA,OAAO,EAAE,KAAKrB,gBAAtB;AAAwC,QAAA,QAAQ,EAAE,CAAC,KAAKT,KAAL,CAAWC,IAAZ,IAAoB,CAAC,KAAKD,KAAL,CAAWE,MAAlF;AAA0F,QAAA,SAAS,EAAEJ,MAAM,CAACmC,GAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAjD+B;;AAqDpC,eAAelC,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport generateUniqueId from 'generate-unique-id'\n\n\nimport styles from './styles/PhoneBook.module.css'\n\nclass ContactForm extends Component {\n\n    state = {\n        name: '',\n        number: '',\n        id: '',\n    }\n\n    handleNewValue = ev => {\n        const { value, name } = ev.target;\n\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    handleNewContact = () => {\n        const newContact = this.state;\n        const contacts = this.props.contacts;\n        const checkedName = contacts.find(el => el.name.toLowerCase() === newContact.name.toLowerCase())\n\n        const addId = () => this.setState({ id: generateUniqueId() })\n        const sendContactToServer = () => this.props.handleSubmit(newContact);\n        const resetState = () => this.setState({ name: '', number: '', id: '' })\n        const showNotification = () => alert(`${newContact.name} already in contacts`)\n\n        if (!checkedName) {\n            addId();\n            console.log(this.state)\n            sendContactToServer();\n        } else { showNotification() };\n\n        resetState();\n    }\n\n    render() {\n        const inputNames = this.props.options;\n\n        return (\n            <form className={styles.form}>\n                {inputNames.map(inputName => (\n                    <label key={inputName} className={styles.label}>\n                        {inputName}\n                        <input type='text' key={inputName} name={inputName} value={this.state[inputName]} onChange={this.handleNewValue} className={styles.input} />\n                    </label>\n                ))}\n                <button onClick={this.handleNewContact} disabled={!this.state.name || !this.state.number} className={styles.btn}>Add contact</button>\n            </form >\n        )\n    }\n\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}