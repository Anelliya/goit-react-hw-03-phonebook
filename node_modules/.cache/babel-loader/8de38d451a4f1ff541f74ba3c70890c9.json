{"ast":null,"code":"var _jsxFileName = \"/home/helen/Documents/Projects/React/1components/src/components/transactions/Items.jsx\";\nimport styles from './Transaction.module.css';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Items({\n  items\n}) {\n  function isOdd(num) {\n    let number = num % 2;\n    return number === 0 ? 'white' : 'rgb(232, 233, 233)'; // if (number === 0) {\n    //     return 'white'\n    // }\n    // return 'rgb(232, 233, 233)'\n  }\n\n  ;\n  return items.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n    style: {\n      backgroundColor: isOdd(index)\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      className: styles.td,\n      children: transaction.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: styles.td,\n      children: transaction.amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: styles.td,\n      children: transaction.currency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this)]\n  }, transaction.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, this));\n}\n\n_c = Items;\nItems.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    amount: PropTypes.string.isRequired,\n    currency: PropTypes.string.isRequired\n  })).isRequired\n};\nItems.defaultTypes = {\n  items: []\n};\nexport default Items;\n\nvar _c;\n\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"sources":["/home/helen/Documents/Projects/React/1components/src/components/transactions/Items.jsx"],"names":["styles","PropTypes","Items","items","isOdd","num","number","map","transaction","index","backgroundColor","td","type","amount","currency","id","propTypes","arrayOf","exact","string","isRequired","defaultTypes"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA0B;AACtB,WAASC,KAAT,CAAeC,GAAf,EAAoB;AAChB,QAAIC,MAAM,GAAGD,GAAG,GAAG,CAAnB;AACA,WAAQC,MAAM,KAAK,CAAX,GAAe,OAAf,GAAyB,oBAAjC,CAFgB,CAGhB;AACA;AACA;AACA;AACH;;AAAA;AAED,SACIH,KAAK,CAACI,GAAN,CAAU,CAACC,WAAD,EAAcC,KAAd,kBACN;AAAyB,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAEN,KAAK,CAACK,KAAD;AAAxB,KAAhC;AAAA,4BACI;AAAI,MAAA,SAAS,EAAET,MAAM,CAACW,EAAtB;AAAA,gBAA2BH,WAAW,CAACI;AAAvC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAEZ,MAAM,CAACW,EAAtB;AAAA,gBAA2BH,WAAW,CAACK;AAAvC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAI,MAAA,SAAS,EAAEb,MAAM,CAACW,EAAtB;AAAA,gBAA2BH,WAAW,CAACM;AAAvC;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,KAASN,WAAW,CAACO,EAArB;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AASH;;KAnBQb,K;AAqBTA,KAAK,CAACc,SAAN,GAAkB;AACdb,EAAAA,KAAK,EAAEF,SAAS,CAACgB,OAAV,CAAkBhB,SAAS,CAACiB,KAAV,CAAgB;AACrCH,IAAAA,EAAE,EAAEd,SAAS,CAACkB,MAAV,CAAiBC,UADgB;AAErCR,IAAAA,IAAI,EAAEX,SAAS,CAACkB,MAAV,CAAiBC,UAFc;AAGrCP,IAAAA,MAAM,EAAEZ,SAAS,CAACkB,MAAV,CAAiBC,UAHY;AAIrCN,IAAAA,QAAQ,EAAEb,SAAS,CAACkB,MAAV,CAAiBC;AAJU,GAAhB,CAAlB,EAKHA;AANU,CAAlB;AASAlB,KAAK,CAACmB,YAAN,GAAqB;AACjBlB,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,eAAeD,KAAf","sourcesContent":["import styles from './Transaction.module.css'\nimport PropTypes from 'prop-types';\n\nfunction Items({ items }) {\n    function isOdd(num) {\n        let number = num % 2;\n        return (number === 0 ? 'white' : 'rgb(232, 233, 233)')\n        // if (number === 0) {\n        //     return 'white'\n        // }\n        // return 'rgb(232, 233, 233)'\n    };\n\n    return (\n        items.map((transaction, index) => (\n            <tr key={transaction.id} style={{ backgroundColor: isOdd(index) }}>\n                <td className={styles.td}>{transaction.type}</td>\n                <td className={styles.td}>{transaction.amount}</td>\n                <td className={styles.td}>{transaction.currency}</td>\n            </tr>\n        ))\n    )\n}\n\nItems.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired,\n        amount: PropTypes.string.isRequired,\n        currency: PropTypes.string.isRequired,\n    })).isRequired,\n}\n\nItems.defaultTypes = {\n    items: [],\n}\n\nexport default Items;"]},"metadata":{},"sourceType":"module"}