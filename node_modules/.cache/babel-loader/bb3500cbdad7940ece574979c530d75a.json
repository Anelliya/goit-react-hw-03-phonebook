{"ast":null,"code":"var _jsxFileName = \"/home/helen/Documents/Projects/React/2hw/src/components/Statistics/Total.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Total = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positiveFeedback\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Good: \", good]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Neutral: \", neutral]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Bad:\", bad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Total:\", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Positive feedback: \", positiveFeedback]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Total;\nexport default Total;\n\nvar _c;\n\n$RefreshReg$(_c, \"Total\");","map":{"version":3,"sources":["/home/helen/Documents/Projects/React/2hw/src/components/Statistics/Total.jsx"],"names":["Total","good","neutral","bad","total","positiveFeedback"],"mappings":";;;;AAAA,MAAMA,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,GAAjB;AAAsBC,EAAAA,KAAtB;AAA6BC,EAAAA;AAA7B,CAAD,KAAqD;AAC/D,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAA,6BAAWJ,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCAAcC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,2BAASC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,6BAAWC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,0CAAwBC,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAYH,CAbD;;KAAML,K;AAeN,eAAeA,KAAf","sourcesContent":["const Total = ({ good, neutral, bad, total, positiveFeedback }) => {\n    return (\n        <>\n            <h2>Statistics</h2>\n            <ul>\n                <li>Good: {good}</li>\n                <li>Neutral: {neutral}</li>\n                <li>Bad:{bad}</li>\n                <li>Total:{total}</li>\n                <li>Positive feedback: {positiveFeedback}</li>\n            </ul>\n        </>\n    )\n}\n\nexport default Total;"]},"metadata":{},"sourceType":"module"}