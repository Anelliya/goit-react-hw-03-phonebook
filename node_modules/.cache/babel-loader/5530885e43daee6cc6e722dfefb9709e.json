{"ast":null,"code":"var _jsxFileName = \"/home/helen/Documents/Projects/React/goit-react-hw-02-phonebook/src/components/ContactForm.jsx\";\nimport React, { Component } from 'react';\nimport generateUniqueId from 'generate-unique-id';\nimport styles from './styles/PhoneBook.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      number: '',\n      id: ''\n    };\n\n    this.handleNewValue = ev => {\n      const {\n        value,\n        name\n      } = ev.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleData = () => {\n      const newItem = this.state;\n      console.log('newItem', newItem); // const contacts = this.props.contacts;\n      // const newItem = this.state;\n      // const checkedName = contacts.find(el => el.name.toLowerCase() === newItem.name.toLowerCase())\n      // !checkedName\n      //     ?\n      //     this.setState(({ contacts }) => ({\n      //         contacts: [newContactstItem, ...contacts]\n      //     }))\n      //     : alert(`${contactstItem.name} already in contacts`)\n\n      this.props.handleSubmit(this.state);\n      this.setState({\n        name: '',\n        number: '',\n        id: ''\n      });\n    };\n  }\n\n  render() {\n    const inputNames = this.props.options;\n    console.log('props =', this.props.contacts);\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      children: [inputNames.map(inputName => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: styles.label,\n        children: [inputName, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: inputName,\n          value: this.state[inputName],\n          onChange: this.handleNewValue,\n          className: styles.input\n        }, inputName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, inputName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleData,\n        disabled: !this.state.name || !this.state.number,\n        className: styles.btn,\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/home/helen/Documents/Projects/React/goit-react-hw-02-phonebook/src/components/ContactForm.jsx"],"names":["React","Component","generateUniqueId","styles","ContactForm","state","name","number","id","handleNewValue","ev","value","target","setState","handleData","newItem","console","log","props","handleSubmit","render","inputNames","options","contacts","form","map","inputName","label","input","btn"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAGA,OAAOC,MAAP,MAAmB,+BAAnB;;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCI,KAFgC,GAExB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,EAAE,EAAE;AAHA,KAFwB;;AAAA,SAQhCC,cARgC,GAQfC,EAAE,IAAI;AACnB,YAAM;AAAEC,QAAAA,KAAF;AAASL,QAAAA;AAAT,UAAkBI,EAAE,CAACE,MAA3B;AAEA,WAAKC,QAAL,CAAc;AACV,SAACP,IAAD,GAAQK;AADE,OAAd;AAGH,KAd+B;;AAAA,SAgBhCG,UAhBgC,GAgBnB,MAAM;AACf,YAAMC,OAAO,GAAG,KAAKV,KAArB;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,OAAvB,EAFe,CAGf;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA,WAAKG,KAAL,CAAWC,YAAX,CAAwB,KAAKd,KAA7B;AAEA,WAAKQ,QAAL,CAAc;AACVP,QAAAA,IAAI,EAAE,EADI;AAEVC,QAAAA,MAAM,EAAE,EAFE;AAGVC,QAAAA,EAAE,EAAE;AAHM,OAAd;AAKH,KAtC+B;AAAA;;AAwChCY,EAAAA,MAAM,GAAG;AACL,UAAMC,UAAU,GAAG,KAAKH,KAAL,CAAWI,OAA9B;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKC,KAAL,CAAWK,QAAlC;AAEA,wBACI;AAAM,MAAA,SAAS,EAAEpB,MAAM,CAACqB,IAAxB;AAAA,iBACKH,UAAU,CAACI,GAAX,CAAeC,SAAS,iBACrB;AAAuB,QAAA,SAAS,EAAEvB,MAAM,CAACwB,KAAzC;AAAA,mBACKD,SADL,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmC,UAAA,IAAI,EAAEA,SAAzC;AAAoD,UAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWqB,SAAX,CAA3D;AAAkF,UAAA,QAAQ,EAAE,KAAKjB,cAAjG;AAAiH,UAAA,SAAS,EAAEN,MAAM,CAACyB;AAAnI,WAAwBF,SAAxB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAYA,SAAZ;AAAA;AAAA;AAAA;AAAA,cADH,CADL,eAOI;AAAQ,QAAA,OAAO,EAAE,KAAKZ,UAAtB;AAAkC,QAAA,QAAQ,EAAE,CAAC,KAAKT,KAAL,CAAWC,IAAZ,IAAoB,CAAC,KAAKD,KAAL,CAAWE,MAA5E;AAAoF,QAAA,SAAS,EAAEJ,MAAM,CAAC0B,GAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAvD+B;;AA2DpC,eAAezB,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport generateUniqueId from 'generate-unique-id'\n\n\nimport styles from './styles/PhoneBook.module.css'\n\nclass ContactForm extends Component {\n\n    state = {\n        name: '',\n        number: '',\n        id: '',\n    }\n\n    handleNewValue = ev => {\n        const { value, name } = ev.target;\n\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    handleData = () => {\n        const newItem = this.state;\n        console.log('newItem', newItem)\n        // const contacts = this.props.contacts;\n        // const newItem = this.state;\n        // const checkedName = contacts.find(el => el.name.toLowerCase() === newItem.name.toLowerCase())\n\n        // !checkedName\n        //     ?\n        //     this.setState(({ contacts }) => ({\n        //         contacts: [newContactstItem, ...contacts]\n        //     }))\n        //     : alert(`${contactstItem.name} already in contacts`)\n\n\n        this.props.handleSubmit(this.state);\n\n        this.setState({\n            name: '',\n            number: '',\n            id: '',\n        })\n    }\n\n    render() {\n        const inputNames = this.props.options;\n        console.log('props =', this.props.contacts)\n\n        return (\n            <form className={styles.form}>\n                {inputNames.map(inputName => (\n                    <label key={inputName} className={styles.label}>\n                        {inputName}\n                        <input type='text' key={inputName} name={inputName} value={this.state[inputName]} onChange={this.handleNewValue} className={styles.input} />\n                    </label>\n                ))}\n                <button onClick={this.handleData} disabled={!this.state.name || !this.state.number} className={styles.btn}>Add contact</button>\n            </form >\n        )\n    }\n\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}