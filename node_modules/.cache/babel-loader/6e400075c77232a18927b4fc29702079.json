{"ast":null,"code":"var _jsxFileName = \"/home/helen/Documents/Projects/React/goit-react-hw-02-phonebook/src/App.js\";\nimport React, { Component } from 'react';\nimport styles from './components/styles/PhoneBook.module.css';\nimport './App.css';\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from './components/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.handleNewContactsItem = contacstItem => {\n      const contacts = this.state.contacts;\n      const checkName = contacts.find(el => el.name.toLowerCase() === contacstItem.name.toLowerCase());\n      !checkName ? this.setState(({\n        contacts\n      }) => ({\n        contacts: [contacstItem, ...contacts]\n      })) : console.log('this name already in contacts'); // !name === searchName\n      //   \n    };\n\n    this.handleFilterValue = event => {\n      this.setState({\n        filter: event.currentTarget.value\n      }); // первая версия фильтра(функция получает готовые данные)\n      // const contacts = this.state.contacts;\n      // console.log('get', value)\n      // const filteredContacts = contacts.filter(contact => (contact.name.toLowerCase().includes(value.toLowerCase())));\n      // this.setState({ filter: filteredContacts });\n      // console.log('filer', this.state.filter)\n    };\n  }\n\n  render() {\n    const {\n      contacts,\n      filter\n    } = this.state;\n    const normolizedFilter = filter.toLocaleLowerCase();\n    const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normolizedFilter));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        options: ['name', 'number'],\n        onSubmit: this.handleNewContactsItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        onCnange: this.handleFilterValue,\n        filterList: filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contactsList: filteredContacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/helen/Documents/Projects/React/goit-react-hw-02-phonebook/src/App.js"],"names":["React","Component","styles","ContactForm","ContactList","Filter","App","state","contacts","id","name","number","filter","handleNewContactsItem","contacstItem","checkName","find","el","toLowerCase","setState","console","log","handleFilterValue","event","currentTarget","value","render","normolizedFilter","toLocaleLowerCase","filteredContacts","contact","includes","container"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport styles from './components/styles/PhoneBook.module.css'\n\nimport './App.css';\n\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from './components/Filter';\n\n\nclass App extends Component {\n\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n\n  }\n\n  handleNewContactsItem = (contacstItem) => {\n    const contacts = this.state.contacts;\n    const checkName = contacts.find(el => el.name.toLowerCase() === contacstItem.name.toLowerCase())\n    !checkName ? this.setState(({ contacts }) => ({\n      contacts: [contacstItem, ...contacts]\n    }))\n      : console.log('this name already in contacts')\n\n    // !name === searchName\n    //   \n\n  }\n\n  handleFilterValue = event => {\n    this.setState({ filter: event.currentTarget.value });\n\n    // первая версия фильтра(функция получает готовые данные)\n    // const contacts = this.state.contacts;\n    // console.log('get', value)\n\n    // const filteredContacts = contacts.filter(contact => (contact.name.toLowerCase().includes(value.toLowerCase())));\n    // this.setState({ filter: filteredContacts });\n    // console.log('filer', this.state.filter)\n\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    const normolizedFilter = filter.toLocaleLowerCase();\n    const filteredContacts = contacts.filter(contact => (contact.name.toLowerCase().includes(normolizedFilter)))\n\n\n    return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <ContactForm options={['name', 'number']} onSubmit={this.handleNewContactsItem} />\n        <h2>Contacts </h2>\n        <Filter onCnange={this.handleFilterValue} filterList={filter} />\n        <ContactList contactsList={filteredContacts} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}